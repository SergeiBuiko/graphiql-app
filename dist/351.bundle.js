"use strict";(self.webpackChunkreact_scratch_sample=self.webpackChunkreact_scratch_sample||[]).push([[351],{5309:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".Vza9KwZ7w5y6dwqf6ofJ {\r\n  height: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n}","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/GraphiQlPage.module.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;AACnB",sourcesContent:[".content {\r\n  height: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n}"],sourceRoot:""}]),a.locals={content:"Vza9KwZ7w5y6dwqf6ofJ"};const t=a},9983:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".ptkYHimKPG1Vi602vyMY {\r\n  /* background-color: purple; */\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 15px;\r\n}\r\n\r\n.ZphR7CS4Mf8ydK3T5_TL {\r\n  width: 20%;\r\n  /* background-color: rgb(209, 208, 214); */\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n  /* height: 200px; */\r\n}\r\n\r\n.kszVxJH_MHislp_6cwjg {\r\n  margin: 0 auto;\r\n  background-color: brown;\r\n}\r\n\r\n.qo_cQSYOY8zOlTRKBBig {\r\n  /* background-color: rgb(214, 231, 231); */\r\n  width: 80%;\r\n  padding: 10px;\r\n  /* height: 200px; */\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Documentation/Documentation.module.css"],names:[],mappings:"AAAA;EACE,8BAA8B;EAC9B,YAAY;EACZ,WAAW;EACX,aAAa;EACb,aAAa;AACf;;AAEA;EACE,UAAU;EACV,0CAA0C;EAC1C,aAAa;EACb,aAAa;EACb,6BAA6B;EAC7B,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,uBAAuB;AACzB;;AAEA;EACE,0CAA0C;EAC1C,UAAU;EACV,aAAa;EACb,mBAAmB;AACrB",sourcesContent:[".docContainer {\r\n  /* background-color: purple; */\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 15px;\r\n}\r\n\r\n.sidebar {\r\n  width: 20%;\r\n  /* background-color: rgb(209, 208, 214); */\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n  /* height: 200px; */\r\n}\r\n\r\n.sidebarBtn {\r\n  margin: 0 auto;\r\n  background-color: brown;\r\n}\r\n\r\n.docContent {\r\n  /* background-color: rgb(214, 231, 231); */\r\n  width: 80%;\r\n  padding: 10px;\r\n  /* height: 200px; */\r\n}\r\n"],sourceRoot:""}]),a.locals={docContainer:"ptkYHimKPG1Vi602vyMY",sidebar:"ZphR7CS4Mf8ydK3T5_TL",sidebarBtn:"kszVxJH_MHislp_6cwjg",docContent:"qo_cQSYOY8zOlTRKBBig"};const t=a},3708:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".HVUDoFq7xO1TRxy9jYw6 {\r\n  color: orangered;\r\n  /* font-size: 40px; */\r\n}\r\n\r\n.MQWLnHGvdimsjwZVAZiB {\r\n  padding: 5px 0;\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Documentation/ElementDetails/ElementDetails.module.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,cAAc;AAChB",sourcesContent:[".link {\r\n  color: orangered;\r\n  /* font-size: 40px; */\r\n}\r\n\r\n.padding {\r\n  padding: 5px 0;\r\n}\r\n"],sourceRoot:""}]),a.locals={link:"HVUDoFq7xO1TRxy9jYw6",padding:"MQWLnHGvdimsjwZVAZiB"};const t=a},8313:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".YeQJAYsInzRm9ENOmQgC {\r\n  padding: 10px;\r\n}\r\n\r\n.R9HF6Qbw8I3j3Z7mpFZ3,\r\n.Wv57B189ouMKOvgKokyP {\r\n  padding: 10px 0;\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Documentation/Query/QueryFields.module.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;;EAEE,eAAe;AACjB",sourcesContent:[".padding {\r\n  padding: 10px;\r\n}\r\n\r\n.h2,\r\n.h5 {\r\n  padding: 10px 0;\r\n}\r\n"],sourceRoot:""}]),a.locals={padding:"YeQJAYsInzRm9ENOmQgC",h2:"R9HF6Qbw8I3j3Z7mpFZ3",h5:"Wv57B189ouMKOvgKokyP"};const t=a},7604:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".VhKgAcmrKQzG1998XQFq {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n}\r\n\r\n.kh5yZ77k9Ph2iRH58FW3 {\r\n    flex-grow: 1;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.oWXKa8LO20Sw_SDQBNRw {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n}","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Editor/Editor.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,oBAAoB;AACxB",sourcesContent:[".container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n}\r\n\r\n.editor {\r\n    flex-grow: 1;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n}"],sourceRoot:""}]),a.locals={container:"VhKgAcmrKQzG1998XQFq",editor:"kh5yZ77k9Ph2iRH58FW3",disabled:"oWXKa8LO20Sw_SDQBNRw"};const t=a},9313:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".tCblEgfOO9X3vz6CBBA9 {\r\n  border-top: 1px solid lightblue;\r\n  padding: 10px;\r\n}\r\n\r\n.g8gFsJY1T0Xeun9yLyIN {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.qQtOHGi_Wn_iuvpCRq1Y {\r\n    position: relative;\r\n}\r\n\r\n.Bx9UVHlWALmCNbcBcaAn {\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 20px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  resize: none;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.lpl86JBvWq_bBaZCBFhT {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n}","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Editor/components/OptionsEditor/OptionsEditor.module.css"],names:[],mappings:"AAAA;EACE,+BAA+B;EAC/B,aAAa;AACf;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,eAAe;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:[".tabs {\r\n  border-top: 1px solid lightblue;\r\n  padding: 10px;\r\n}\r\n\r\n.expandBtn {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.editorContainer {\r\n    position: relative;\r\n}\r\n\r\n.editorField {\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 20px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  resize: none;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.errorIcon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n}"],sourceRoot:""}]),a.locals={tabs:"tCblEgfOO9X3vz6CBBA9",expandBtn:"g8gFsJY1T0Xeun9yLyIN",editorContainer:"qQtOHGi_Wn_iuvpCRq1Y",editorField:"Bx9UVHlWALmCNbcBcaAn",errorIcon:"lpl86JBvWq_bBaZCBFhT"};const t=a},9506:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".p3F1rifepecxU24y3rei {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.P9dPoPfiUX23b27Dho1w {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 20px;\r\n  padding-right: 80px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  resize: none;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.S62OZuvFlK4ZTVwGEa2q {\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n}\r\n\r\n.fqkZBvgXSp_psfouwOsf {\r\n  position: relative;\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Editor/components/RequestEditor/RequestEditor.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;AACd",sourcesContent:[".editor {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.editorField {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 20px;\r\n  padding-right: 80px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  resize: none;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.toolsContainer {\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n}\r\n\r\n.playBtn {\r\n  position: relative;\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n"],sourceRoot:""}]),a.locals={editor:"p3F1rifepecxU24y3rei",editorField:"P9dPoPfiUX23b27Dho1w",toolsContainer:"S62OZuvFlK4ZTVwGEa2q",playBtn:"fqkZBvgXSp_psfouwOsf"};const t=a},8801:(n,e,r)=>{r.d(e,{Z:()=>t});var i=r(7537),o=r.n(i),s=r(3645),a=r.n(s)()(o());a.push([n.id,".K7us_Zmfy0DBc8pc5GAp {\r\n  position: absolute;\r\n  width: 100%;\r\n  word-wrap: break-word;\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.T_hOqAYcw0OC3Y9lT42c {\r\n  position: relative;\r\n  display: flex;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/GraphiQlPage/components/Editor/components/RequestResult/RequestResults.module.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,qBAAqB;EACrB,qBAAqB;EACrB,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,gBAAgB;EAChB,cAAc;AAChB",sourcesContent:[".response {\r\n  position: absolute;\r\n  width: 100%;\r\n  word-wrap: break-word;\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.responseContainer {\r\n  position: relative;\r\n  display: flex;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n"],sourceRoot:""}]),a.locals={response:"K7us_Zmfy0DBc8pc5GAp",responseContainer:"T_hOqAYcw0OC3Y9lT42c"};const t=a},1351:(n,e,r)=>{r.r(e),r.d(e,{GraphiQlPage:()=>fn});var i=r(5893),o=r(5725),s=r(4680),a=r(7294),t=r(1079);function l({el:n,addParams:e}){var r;return(0,i.jsxs)("span",{children:["(",null===(r=n.args)||void 0===r?void 0:r.map(((n,r)=>{var o,s,a,l,d,c,p,A,u,m,v,h,g,y,f,x;return(0,i.jsxs)("span",{children:[(0,i.jsx)("span",Object.assign({style:{color:"red"}},{children:n.name})),":"," ",(0,i.jsx)(t.Z,Object.assign({style:{color:"orange"},underline:"hover",href:"#",onClick:r=>{var i,o,s,a,t,l,d,c,p,A,u,m,v,h,g,y;r.preventDefault(),e((null===(i=n.type)||void 0===i?void 0:i.name)?null===(o=n.type)||void 0===o?void 0:o.name:(null===(a=null===(s=n.type)||void 0===s?void 0:s.ofType)||void 0===a?void 0:a.name)?null===(l=null===(t=n.type)||void 0===t?void 0:t.ofType)||void 0===l?void 0:l.name:(null===(p=null===(c=null===(d=n.type)||void 0===d?void 0:d.ofType)||void 0===c?void 0:c.ofType)||void 0===p?void 0:p.name)?null===(m=null===(u=null===(A=n.type)||void 0===A?void 0:A.ofType)||void 0===u?void 0:u.ofType)||void 0===m?void 0:m.name:null===(y=null===(g=null===(h=null===(v=n.type)||void 0===v?void 0:v.ofType)||void 0===h?void 0:h.ofType)||void 0===g?void 0:g.ofType)||void 0===y?void 0:y.name)}},{children:(null===(o=n.type)||void 0===o?void 0:o.name)?null===(s=n.type)||void 0===s?void 0:s.name:(null===(l=null===(a=n.type)||void 0===a?void 0:a.ofType)||void 0===l?void 0:l.name)?null===(c=null===(d=n.type)||void 0===d?void 0:d.ofType)||void 0===c?void 0:c.name:(null===(u=null===(A=null===(p=n.type)||void 0===p?void 0:p.ofType)||void 0===A?void 0:A.ofType)||void 0===u?void 0:u.name)?null===(h=null===(v=null===(m=n.type)||void 0===m?void 0:m.ofType)||void 0===v?void 0:v.ofType)||void 0===h?void 0:h.name:null===(x=null===(f=null===(y=null===(g=n.type)||void 0===g?void 0:g.ofType)||void 0===y?void 0:y.ofType)||void 0===f?void 0:f.ofType)||void 0===x?void 0:x.name}))," "]},r)}))," ",")"]})}var d=r(3379),c=r.n(d),p=r(7795),A=r.n(p),u=r(569),m=r.n(u),v=r(3565),h=r.n(v),g=r(9216),y=r.n(g),f=r(4589),x=r.n(f),b=r(3708),j={};j.styleTagTransform=x(),j.setAttributes=h(),j.insert=m().bind(null,"head"),j.domAPI=A(),j.insertStyleElement=y(),c()(b.Z,j);const C=b.Z&&b.Z.locals?b.Z.locals:void 0;function B({el:n,addType:e,addName:r,addParams:o}){return(0,i.jsxs)("div",Object.assign({className:C.padding},{children:[(0,i.jsx)(t.Z,Object.assign({underline:"hover",href:"#",onClick:e=>{e.preventDefault(),r(n.name)}},{children:n.name}))," ",(0,i.jsx)(l,{addParams:o,el:n})," :",(0,i.jsx)("span",{children:(0,i.jsx)(t.Z,Object.assign({style:{color:"orange"},underline:"hover",href:"#",onClick:r=>{r.preventDefault(),e(n.type.name?n.type.name:n.type.ofType.name?n.type.ofType.name:n.type.ofType.ofType.name)}},{children:n.type.name?n.type.name:n.type.ofType.name?n.type.ofType.name:n.type.ofType.ofType.name}))}),(0,i.jsx)("p",{children:n.description})]}))}var E=r(8313),Z={};Z.styleTagTransform=x(),Z.setAttributes=h(),Z.insert=m().bind(null,"head"),Z.domAPI=A(),Z.insertStyleElement=y(),c()(E.Z,Z);const O=E.Z&&E.Z.locals?E.Z.locals:void 0;var T;function k({schema:n}){var e,r,o,s,l,d,c,p,A,u,m;const[v,h]=(0,a.useState)([]),g=null==n?void 0:n.data.__schema.types.find((n=>{var e;return n.name===(null===(e=v[v.length-1])||void 0===e?void 0:e.name)})),y=n.data.__schema.types[0].fields.find((n=>{var e;return n.name===(null===(e=v[v.length-1])||void 0===e?void 0:e.name)})),f=null==n?void 0:n.data.__schema.types.find((n=>{var e;return n.name===(null===(e=v[v.length-2])||void 0===e?void 0:e.name)})),x=null===(e=null==f?void 0:f.fields)||void 0===e?void 0:e.find((n=>{var e;return n.name===(null===(e=v[v.length-1])||void 0===e?void 0:e.name)})),b=n=>{h((e=>[...e,{name:n,type:T.query}]))},j=n=>{h((e=>[...e,{name:n,type:T.queryType}]))},C=n=>{h((e=>[...e,{name:n,type:T.queryParams}]))},E=()=>{h((n=>{const e=[...n];return e.pop(),e}))};return v.length?(null===(r=v[v.length-1])||void 0===r?void 0:r.type)===T.queryType?(0,i.jsxs)("div",{children:[!!v.length&&(0,i.jsx)(t.Z,Object.assign({component:"button",onClick:E},{children:v[v.length-2]?`< ${v[v.length-2].name}`:"< Docs"})),y&&(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",Object.assign({className:O.h2},{children:y.type.name})),(0,i.jsx)("p",{children:y.description}),(0,i.jsx)("h5",Object.assign({className:O.h2},{children:"Type"})),(0,i.jsx)("p",{children:(null===(o=y.type)||void 0===o?void 0:o.name)?null===(s=y.type)||void 0===s?void 0:s.name:null===(d=null===(l=y.type)||void 0===l?void 0:l.ofType)||void 0===d?void 0:d.name}),(0,i.jsx)("h5",Object.assign({className:O.h5},{children:"Arguments"})),null===(c=y.args)||void 0===c?void 0:c.map(((n,e)=>{var r,o,s,a,t,l,d,c,p,A,u,m,v,h,g;return(0,i.jsxs)("p",{children:[n.name," :"," ",n.type.name?null===(r=n.type)||void 0===r?void 0:r.name:(null===(s=null===(o=n.type)||void 0===o?void 0:o.ofType)||void 0===s?void 0:s.name)?null===(t=null===(a=n.type)||void 0===a?void 0:a.ofType)||void 0===t?void 0:t.name:(null===(c=null===(d=null===(l=n.type)||void 0===l?void 0:l.ofType)||void 0===d?void 0:d.ofType)||void 0===c?void 0:c.name)?null===(u=null===(A=null===(p=n.type)||void 0===p?void 0:p.ofType)||void 0===A?void 0:A.ofType)||void 0===u?void 0:u.name:null===(g=null===(h=null===(v=null===(m=n.type)||void 0===m?void 0:m.ofType)||void 0===v?void 0:v.ofType)||void 0===h?void 0:h.ofType)||void 0===g?void 0:g.name]},e)}))]}),!y&&(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",Object.assign({className:O.h2},{children:null==x?void 0:x.name})),(0,i.jsx)("p",{children:null==x?void 0:x.description}),(0,i.jsx)("h5",Object.assign({className:O.h5},{children:"Type"})),(0,i.jsx)("p",{children:null==x?void 0:x.type.name})]})]}):(console.log(g),(null===(p=v[v.length-1])||void 0===p?void 0:p.type)===T.queryParams?(0,i.jsxs)("div",{children:[(0,i.jsx)(t.Z,Object.assign({component:"button",onClick:E},{children:v[v.length-2]?`< ${v[v.length-2].name}`:"< Docs"})),(0,i.jsx)("h2",Object.assign({className:O.h2},{children:null==g?void 0:g.name})),null===(A=null==g?void 0:g.inputFields)||void 0===A?void 0:A.map(((n,e)=>{var r;return(0,i.jsxs)("p",{children:[(0,i.jsx)(t.Z,Object.assign({underline:"hover",href:"#",onClick:e=>{e.preventDefault(),j(n.name)}},{children:n.name}))," ",":",(0,i.jsx)(t.Z,Object.assign({underline:"hover",href:"#",onClick:e=>{var r;e.preventDefault(),b(null===(r=n.type)||void 0===r?void 0:r.name)}},{children:null===(r=n.type)||void 0===r?void 0:r.name}))]},e)})),(0,i.jsx)("p",{children:null==g?void 0:g.description})]}):(0,i.jsxs)("div",{children:[(null===(u=v[v.length-1])||void 0===u?void 0:u.type)===T.query&&(0,i.jsx)(t.Z,Object.assign({component:"button",onClick:E},{children:v[v.length-2]?`< ${v[v.length-2].name}`:"< Docs"})),(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",Object.assign({className:O.h2},{children:g.name})),(0,i.jsx)("p",{children:g.description})]}),null===(m=null==g?void 0:g.fields)||void 0===m?void 0:m.map(((n,e)=>(0,i.jsx)("div",{children:(0,i.jsx)(B,{el:n,addType:b,addName:j,addParams:C})},e)))]})):(0,i.jsxs)("div",{children:[(0,i.jsx)("p",{children:"A GraphQL schema provides a root type for each kind of operation."}),`${null==n?void 0:n.data.__schema.queryType.name} : `,(0,i.jsx)(t.Z,Object.assign({underline:"hover",href:"#",onClick:e=>{e.preventDefault(),h([{name:null==n?void 0:n.data.__schema.types[0].name,type:T.query}])}},{children:"Query"}))]})}!function(n){n.query="query",n.queryType="queryType",n.queryParams="queryParams"}(T||(T={}));var w=r(6914),Y=r(9983),q={};q.styleTagTransform=x(),q.setAttributes=h(),q.insert=m().bind(null,"head"),q.domAPI=A(),q.insertStyleElement=y(),c()(Y.Z,q);const P=Y.Z&&Y.Z.locals?Y.Z.locals:void 0;var _=r(6896);function I(){const[n,e]=(0,a.useState)(),[r,o]=(0,a.useState)(!1),s=(0,_.Z)();return console.log(n),(0,a.useEffect)((()=>{fetch("https://rickandmortyapi.graphcdn.app/",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"#graphql\n      query IntrospectionQuery {\n        __schema {\n          queryType {\n            name\n          }\n          mutationType {\n            name\n          }\n          subscriptionType {\n            name\n          }\n          types {\n            ...FullType\n          }\n          directives {\n            name\n            description\n\n            locations\n            args {\n              ...InputValue\n            }\n          }\n        }\n      }\n\n      fragment FullType on __Type {\n        kind\n        name\n        description\n\n        fields(includeDeprecated: true) {\n          name\n          description\n          args {\n            ...InputValue\n          }\n          type {\n            ...TypeRef\n          }\n          isDeprecated\n          deprecationReason\n        }\n        inputFields {\n          ...InputValue\n        }\n        interfaces {\n          ...TypeRef\n        }\n        enumValues(includeDeprecated: true) {\n          name\n          description\n          isDeprecated\n          deprecationReason\n        }\n        possibleTypes {\n          ...TypeRef\n        }\n      }\n\n      fragment InputValue on __InputValue {\n        name\n        description\n        type {\n          ...TypeRef\n        }\n        defaultValue\n      }\n\n      fragment TypeRef on __Type {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    "})}).then((n=>n.json())).then((n=>e(n)))}),[]),(0,i.jsxs)("div",Object.assign({className:P.docContainer},{children:[(0,i.jsx)("div",Object.assign({className:P.sidebar},{children:(0,i.jsx)(w.Z,Object.assign({onClick:()=>o(!r),variant:"outlined",className:P.sidebarBtn},{children:s.formatMessage({id:"documentation"})}))})),(0,i.jsx)("div",Object.assign({className:P.docContent},{children:r&&(0,i.jsx)(k,{schema:n})}))]}))}var N=r(1508),S=r(3027),Q=r(854),R=r(6186),V=r(2861),F=r(7536),D=r(6551),z=r(7604),W={};W.styleTagTransform=x(),W.setAttributes=h(),W.insert=m().bind(null,"head"),W.domAPI=A(),W.insertStyleElement=y(),c()(z.Z,W);const G=z.Z&&z.Z.locals?z.Z.locals:void 0;var H,K=r(2895);!function(n){n.Variables="Variables",n.Headers="Headers"}(H||(H={}));var X=r(3351),J=r(6867),L=r(2981),M=r(4370);const U=(0,a.memo)((({isActive:n,error:e,toggleOption:r,children:o})=>(0,i.jsx)(w.Z,Object.assign({variant:n?"contained":"outlined",onClick:r,color:e?"error":"primary"},{children:o}))));var $=r(9313),nn={};nn.styleTagTransform=x(),nn.setAttributes=h(),nn.insert=m().bind(null,"head"),nn.domAPI=A(),nn.insertStyleElement=y(),c()($.Z,nn);const en=$.Z&&$.Z.locals?$.Z.locals:void 0,rn=(0,a.memo)((({invalidJsonErrors:n,register:e})=>{const[r,o]=(0,a.useState)(),s=(0,a.useCallback)((n=>()=>o(n)),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(X.Z,Object.assign({className:en.tabs,direction:"row",spacing:2},{children:[(0,i.jsx)(U,Object.assign({toggleOption:s(H.Variables),isActive:r===H.Variables,error:n[H.Variables]||null},{children:(0,D.Z)("optionsEditorVariablesTab")})),(0,i.jsx)(U,Object.assign({toggleOption:s(H.Headers),isActive:r===H.Headers,error:n[H.Headers]||null},{children:(0,D.Z)("optionsEditorHeadersTab")})),(0,i.jsx)("div",Object.assign({className:en.expandBtn,onClick:s(r?null:H.Variables)},{children:(0,i.jsx)(J.Z,Object.assign({size:"small"},{children:(0,i.jsx)(K.Z,{children:r?"expand_less":"expand_more"})}))}))]})),(0,i.jsx)(N.Z,Object.assign({width:"100%"},{children:(0,i.jsx)(L.Z,Object.assign({in:!!r},{children:(0,i.jsxs)("div",Object.assign({className:en.editorContainer},{children:["Variables"===r?(0,i.jsx)("textarea",Object.assign({},e("variables"),{className:en.editorField}),"variables"):(0,i.jsx)("textarea",Object.assign({},e("headers"),{className:en.editorField}),"headers"),r&&n[r]?(0,i.jsx)(M.Z,Object.assign({title:n[r],arrow:!0,placement:"top"},{children:(0,i.jsx)(K.Z,Object.assign({className:en.errorIcon,color:"error",baseClassName:"material-symbols-outlined"},{children:"info"}))})):""]}))}))}))]})}));var on=r(9506),sn={};sn.styleTagTransform=x(),sn.setAttributes=h(),sn.insert=m().bind(null,"head"),sn.domAPI=A(),sn.insertStyleElement=y(),c()(on.Z,sn);const an=on.Z&&on.Z.locals?on.Z.locals:void 0;function tn(n){try{return JSON.parse(n.trim()||"{}")}catch(n){return n}}function ln(n){return n instanceof Error?n.message:null}const dn=(0,a.memo)((({onSendQuery:n,onInvalidOptionError:e})=>{const{register:r,getValues:o}=(0,F.cI)({defaultValues:{variables:"{\n  \n}",headers:"{\n  \n}"}}),[t,l]=(0,a.useState)({}),d=(0,a.useCallback)((()=>{return r=void 0,i=void 0,a=function*(){const{query:r,variables:i,headers:s}=o(),a={variables:tn(i),headers:tn(s)};l({[H.Variables]:ln(a.variables),[H.Headers]:ln(a.headers)}),Object.values(a).some((n=>n instanceof Error))?e(!0):(e(!1),yield n({query:r,variables:a.variables,headers:a.headers}))},new((s=void 0)||(s=Promise))((function(n,e){function o(n){try{l(a.next(n))}catch(n){e(n)}}function t(n){try{l(a.throw(n))}catch(n){e(n)}}function l(e){var r;e.done?n(e.value):(r=e.value,r instanceof s?r:new s((function(n){n(r)}))).then(o,t)}l((a=a.apply(r,i||[])).next())}));var r,i,s,a}),[n]);return(0,i.jsxs)(s.Z,Object.assign({className:an.editor},{children:[(0,i.jsxs)("div",Object.assign({className:an.playBtn},{children:[(0,i.jsx)("textarea",Object.assign({},r("query"),{className:an.editorField})),(0,i.jsx)("div",Object.assign({className:an.toolsContainer},{children:(0,i.jsx)(w.Z,Object.assign({variant:"contained",onClick:d},{children:(0,i.jsx)(K.Z,{children:"play_arrow"})}))}))]})),(0,i.jsx)(rn,{invalidJsonErrors:t,register:r})]}))}));var cn=r(2658),pn=r(8801),An={};An.styleTagTransform=x(),An.setAttributes=h(),An.insert=m().bind(null,"head"),An.domAPI=A(),An.insertStyleElement=y(),c()(pn.Z,An);const un=pn.Z&&pn.Z.locals?pn.Z.locals:void 0,mn=(0,a.memo)((({result:n="",error:e})=>(0,i.jsx)(N.Z,Object.assign({className:un.responseContainer},{children:e?(0,i.jsx)(cn.Z,Object.assign({color:"error",className:un.response},{children:e})):(0,i.jsx)("p",Object.assign({className:un.response},{children:n}))}))));const vn=()=>{const[n,e]=(0,a.useState)(),[r,s]=(0,a.useState)(),[t,l]=(0,a.useState)(),{register:d,watch:c}=(0,F.cI)(),p=c("graphQLApi"),A=(0,_.Z)(),u=(0,a.useCallback)((n=>{(function(n,e){return r=this,i=void 0,s=function*(){const{headers:r}=e,i=function(n,e){var r={};for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&e.indexOf(i)<0&&(r[i]=n[i]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(n);o<i.length;o++)e.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(n,i[o])&&(r[i[o]]=n[i[o]])}return r}(e,["headers"]);return(0,V.Z)({url:n,method:"post",headers:Object.assign(Object.assign({},r),{"content-type":"application/json"}),data:JSON.stringify(i)}).then((n=>n&&Object.values(n.data)))},new((o=void 0)||(o=Promise))((function(n,e){function a(n){try{l(s.next(n))}catch(n){e(n)}}function t(n){try{l(s.throw(n))}catch(n){e(n)}}function l(e){var r;e.done?n(e.value):(r=e.value,r instanceof o?r:new o((function(n){n(r)}))).then(a,t)}l((s=s.apply(r,i||[])).next())}));var r,i,o,s})(p,n).then((n=>{e(JSON.stringify(n,null,2)),s(null)})).catch((n=>{var e,r,i,o;s((null===(o=null===(i=null===(r=null===(e=n.response)||void 0===e?void 0:e.data)||void 0===r?void 0:r.errors)||void 0===i?void 0:i[0])||void 0===o?void 0:o.message)||n.message||A.formatMessage({id:"editorGraphQLUnhandledError"})),l(!0)}))}),[p,A.formatMessage]),m=(0,a.useCallback)((n=>{s(n?A.formatMessage({id:"editorOptionsJsonError"}):null),l(n)}),[A.formatMessage]);return(0,i.jsxs)(N.Z,Object.assign({className:G.container},{children:[(0,i.jsx)(S.Z,Object.assign({},d("graphQLApi"),{label:"GraphQLapi",variant:"outlined",placeholder:A.formatMessage({id:"editorGraphQLApiPlaceholder"})})),(0,i.jsx)(N.Z,Object.assign({className:`${G.editor} ${p?"":G.disabled}`},{children:(0,i.jsxs)(o.ZP,Object.assign({height:"100%",container:!0,spacing:2},{children:[(0,i.jsx)(o.ZP,Object.assign({item:!0,xs:12,md:6},{children:(0,i.jsx)(dn,{onSendQuery:u,onInvalidOptionError:m})})),(0,i.jsx)(o.ZP,Object.assign({item:!0,xs:12,md:6},{children:(0,i.jsx)(mn,{result:n,error:r})})),(0,i.jsx)(Q.Z,Object.assign({open:!!t,autoHideDuration:3e3,onClose:()=>{l(!1)},anchorOrigin:{vertical:"top",horizontal:"right"}},{children:(0,i.jsx)(R.Z,Object.assign({severity:"error"},{children:(0,D.Z)("editorAlertError")}))}))]}))}))]}))};var hn=r(5309),gn={};gn.styleTagTransform=x(),gn.setAttributes=h(),gn.insert=m().bind(null,"head"),gn.domAPI=A(),gn.insertStyleElement=y(),c()(hn.Z,gn);const yn=hn.Z&&hn.Z.locals?hn.Z.locals:void 0;function fn(){return(0,i.jsxs)(o.ZP,Object.assign({container:!0,className:yn.content,spacing:2,alignItems:"stretch"},{children:[(0,i.jsx)(o.ZP,Object.assign({item:!0,xs:4},{children:(0,i.jsx)(s.Z,{children:(0,i.jsx)(I,{})})})),(0,i.jsx)(o.ZP,Object.assign({item:!0,xs:8,minWidth:"320px"},{children:(0,i.jsx)(s.Z,Object.assign({className:yn.content},{children:(0,i.jsx)(vn,{})}))}))]}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,