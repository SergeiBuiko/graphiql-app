"use strict";(self.webpackChunkreact_scratch_sample=self.webpackChunkreact_scratch_sample||[]).push([[729],{7906:(r,n,e)=>{e.d(n,{Z:()=>i});var s=e(7537),a=e.n(s),t=e(3645),o=e.n(t)()(a());o.push([r.id,".DT8HdkD2jG1xOx0YYxyE {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.GTkLMt3rRcX5O9lVcDTm {\r\n    font-size: 1rem;\r\n    color: #333333;\r\n    font-weight: normal;\r\n    text-transform: capitalize;\r\n}\r\n\r\n.BBhf_YmadGb9JNg6EMLZ {\r\n    outline: none;\r\n    border: 1px solid #DEDEDE;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    padding: 16px;\r\n}\r\n\r\n.BBhf_YmadGb9JNg6EMLZ:focus {\r\n    border: 1px solid #3d4657;\r\n}\r\n\r\n.BBhf_YmadGb9JNg6EMLZ.ansU7bHNrBuXWgxueqc0 {\r\n    border: 1px solid #e435aa;\r\n}\r\n\r\n.Z66d8abPuphQjzFzMJXA {\r\n    color: #e435aa;\r\n    font-size: 0.8rem;\r\n    margin-top: 6px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .DT8HdkD2jG1xOx0YYxyE {\r\n        gap: 6px;\r\n    }\r\n\r\n    .GTkLMt3rRcX5O9lVcDTm {\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    .BBhf_YmadGb9JNg6EMLZ {\r\n        font-size: 0.8rem;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./src/components/common/Input/Input.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,eAAe;IACf,cAAc;IACd,mBAAmB;IACnB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI;QACI,QAAQ;IACZ;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,iBAAiB;IACrB;AACJ",sourcesContent:[".inputWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.label {\r\n    font-size: 1rem;\r\n    color: #333333;\r\n    font-weight: normal;\r\n    text-transform: capitalize;\r\n}\r\n\r\n.input {\r\n    outline: none;\r\n    border: 1px solid #DEDEDE;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    padding: 16px;\r\n}\r\n\r\n.input:focus {\r\n    border: 1px solid #3d4657;\r\n}\r\n\r\n.input.error {\r\n    border: 1px solid #e435aa;\r\n}\r\n\r\n.errorMessage {\r\n    color: #e435aa;\r\n    font-size: 0.8rem;\r\n    margin-top: 6px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .inputWrapper {\r\n        gap: 6px;\r\n    }\r\n\r\n    .label {\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    .input {\r\n        font-size: 0.8rem;\r\n    }\r\n}\r\n"],sourceRoot:""}]),o.locals={inputWrapper:"DT8HdkD2jG1xOx0YYxyE",label:"GTkLMt3rRcX5O9lVcDTm",input:"BBhf_YmadGb9JNg6EMLZ",error:"ansU7bHNrBuXWgxueqc0",errorMessage:"Z66d8abPuphQjzFzMJXA"};const i=o},6688:(r,n,e)=>{e.d(n,{Z:()=>i});var s=e(7537),a=e.n(s),t=e(3645),o=e.n(t)()(a());o.push([r.id,".mCwcen_WqjPzIN86XLfV {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.3rem;\r\n}\r\n\r\n.mCwcen_WqjPzIN86XLfV > *:last-child {\r\n    margin-top: 2rem;\r\n}\r\n\r\n.mkQOQqVeCWaIwFm2ll9_ {\r\n    color: #e435aa;\r\n    font-size: 1rem;\r\n    margin-top: 12px;\r\n    text-align: center;\r\n}","",{version:3,sources:["webpack://./src/components/common/LoginFormModal/SignIn/SignIn.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:[".contentWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.3rem;\r\n}\r\n\r\n.contentWrapper > *:last-child {\r\n    margin-top: 2rem;\r\n}\r\n\r\n.errorMessage {\r\n    color: #e435aa;\r\n    font-size: 1rem;\r\n    margin-top: 12px;\r\n    text-align: center;\r\n}"],sourceRoot:""}]),o.locals={contentWrapper:"mCwcen_WqjPzIN86XLfV",errorMessage:"mkQOQqVeCWaIwFm2ll9_"};const i=o},9487:(r,n,e)=>{e.d(n,{Z:()=>i});var s=e(7537),a=e.n(s),t=e(3645),o=e.n(t)()(a());o.push([r.id,".Gqxl7nETSQEdjGukk_eA {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.3rem;\r\n}\r\n\r\n.Gqxl7nETSQEdjGukk_eA > *:last-child {\r\n    margin-top: 2rem;\r\n}\r\n\r\n.Cvxlydr6mBvCsXbnKQMM {\r\n    color: #e435aa;\r\n    font-size: 1rem;\r\n    margin-top: 12px;\r\n    text-align: center;\r\n}","",{version:3,sources:["webpack://./src/components/common/LoginFormModal/SignUp/SignUp.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:[".contentWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.3rem;\r\n}\r\n\r\n.contentWrapper > *:last-child {\r\n    margin-top: 2rem;\r\n}\r\n\r\n.errorMessage {\r\n    color: #e435aa;\r\n    font-size: 1rem;\r\n    margin-top: 12px;\r\n    text-align: center;\r\n}"],sourceRoot:""}]),o.locals={contentWrapper:"Gqxl7nETSQEdjGukk_eA",errorMessage:"Cvxlydr6mBvCsXbnKQMM"};const i=o},4771:(r,n,e)=>{e.d(n,{Z:()=>i});var s=e(7537),a=e.n(s),t=e(3645),o=e.n(t)()(a());o.push([r.id,"* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.p_WD3dClerJhNrpqjzjQ {\r\n    background-color: rgba(242, 245, 249, 0.4);\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.Izl8xsyTN1FCFboTTghA {\r\n    font-size: 1.5rem;\r\n    font-weight: bolder;\r\n}\r\n\r\n.N3yEPIlkasils0gz29r2 {\r\n    font-size: 0.9rem;\r\n    color: #757575;\r\n}\r\n\r\n.xgeLmvWmcesxt6cFVhcU {\r\n    padding: 50px 48px;\r\n    background-color: #ffffff;\r\n    border-radius: 6px;\r\n    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .Izl8xsyTN1FCFboTTghA {\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    .N3yEPIlkasils0gz29r2 {\r\n        font-size: 0.7rem;\r\n    }\r\n\r\n    .xgeLmvWmcesxt6cFVhcU {\r\n        padding: 32px 24px;\r\n        gap: 2rem;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./src/pages/AccountPage/AccountPage.module.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;IAC1C,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,kBAAkB;IAClB,0CAA0C;IAC1C,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI;QACI,iBAAiB;IACrB;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,kBAAkB;QAClB,SAAS;IACb;AACJ",sourcesContent:["* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.accountWrapper {\r\n    background-color: rgba(242, 245, 249, 0.4);\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.title {\r\n    font-size: 1.5rem;\r\n    font-weight: bolder;\r\n}\r\n\r\n.subtitle {\r\n    font-size: 0.9rem;\r\n    color: #757575;\r\n}\r\n\r\n.formWrapper {\r\n    padding: 50px 48px;\r\n    background-color: #ffffff;\r\n    border-radius: 6px;\r\n    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .title {\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    .subtitle {\r\n        font-size: 0.7rem;\r\n    }\r\n\r\n    .formWrapper {\r\n        padding: 32px 24px;\r\n        gap: 2rem;\r\n    }\r\n}\r\n"],sourceRoot:""}]),o.locals={accountWrapper:"p_WD3dClerJhNrpqjzjQ",title:"Izl8xsyTN1FCFboTTghA",subtitle:"N3yEPIlkasils0gz29r2",formWrapper:"xgeLmvWmcesxt6cFVhcU"};const i=o},1729:(r,n,e)=>{e.r(n),e.d(n,{AccountPage:()=>U});var s=e(5893),a=e(3379),t=e.n(a),o=e(7795),i=e.n(o),A=e(569),l=e.n(A),c=e(3565),d=e.n(c),p=e(9216),m=e.n(p),g=e(4589),u=e.n(g),I=e(9487),x={};x.styleTagTransform=u(),x.setAttributes=d(),x.insert=l().bind(null,"head"),x.domAPI=i(),x.insertStyleElement=m(),t()(I.Z,x);const C=I.Z&&I.Z.locals?I.Z.locals:void 0;var B=e(7906),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=l().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=m(),t()(B.Z,f);const h=B.Z&&B.Z.locals?B.Z.locals:void 0;var b=e(7294);const v=(0,b.forwardRef)(((r,n)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",Object.assign({className:h.inputWrapper},{children:[(0,s.jsx)("label",Object.assign({className:h.label,htmlFor:r.name},{children:r.name})),(0,s.jsx)("input",Object.assign({className:`${h.input} ${r.error?h.error:""}`,type:r.type,placeholder:r.placeholder,onInput:r.onInput,ref:n},r))]})),r.error&&(0,s.jsx)("p",Object.assign({className:h.errorMessage},{children:r.error}))]})));var j=e(8352),E=e(4706),y=e(3573),z=e(9155),k=e(7536),M=e(3170),W=e(9250),S=e(6896);const w=()=>{var r,n;const{register:e,formState:{errors:a},handleSubmit:t,reset:o}=(0,k.cI)(),[i,A]=(0,b.useState)(""),[l,c]=(0,b.useState)(""),[d,p]=(0,b.useState)(null),m=(0,y.T)(),g=(0,W.s0)(),u=(0,S.Z)(),I=u.formatMessage({id:"signUpEmailExistError"}),x=u.formatMessage({id:"signUpEnterEmailPlaceholder"}),B=u.formatMessage({id:"signUpEnterPasswordPlaceholder"}),f=u.formatMessage({id:"signUpBtnSighUp"}),h=u.formatMessage({id:"errRequired"}),w=u.formatMessage({id:"errMinLength"}),T=u.formatMessage({id:"errAtLeastOneLetter"}),Z=u.formatMessage({id:"errAtLeastOneDigit"}),N=u.formatMessage({id:"errSpecialCharacter"});return(0,s.jsxs)("div",Object.assign({className:C.contentWrapper},{children:[(0,s.jsx)(v,Object.assign({type:"email",placeholder:x,onInput:r=>A(r.target.value)},e("email",{required:{value:!0,message:h}}),{error:null===(r=null==a?void 0:a.email)||void 0===r?void 0:r.message})),(0,s.jsx)(v,Object.assign({type:"text",placeholder:B,onInput:r=>c(r.target.value)},e("password",{required:{value:!0,message:h},minLength:{value:8,message:w},validate:{atLeastOneLetter:r=>/[a-zA-Z]/.test(r)||T,atLeastOneDigit:r=>/\d/.test(r)||Z,specialCharacter:r=>/[!@#$%^&*(),.?":{}|<>]/.test(r)||N}}),{error:null===(n=null==a?void 0:a.password)||void 0===n?void 0:n.message})),(0,s.jsx)(M.z,{clickHandler:t((()=>{(0,j.Xb)(E.I,i,l).then((r=>{var n;n=r.user.email,m((0,z.WG)({userEmail:n})),o(),g("/GraphiQL")})).catch((r=>{"auth/email-already-in-use"===r.code?p(I):console.log(r.message)}))})),text:f}),d&&(0,s.jsx)("p",Object.assign({className:C.errorMessage},{children:d}))]}))};var T=e(6688),Z={};Z.styleTagTransform=u(),Z.setAttributes=d(),Z.insert=l().bind(null,"head"),Z.domAPI=i(),Z.insertStyleElement=m(),t()(T.Z,Z);const N=T.Z&&T.Z.locals?T.Z.locals:void 0,L=()=>{var r,n;const{register:e,formState:{errors:a},handleSubmit:t,reset:o}=(0,k.cI)(),[i,A]=(0,b.useState)(""),[l,c]=(0,b.useState)(""),[d,p]=(0,b.useState)(null),m=(0,y.T)(),g=(0,W.s0)(),u=(0,S.Z)(),I=u.formatMessage({id:"signInWrongPassword"}),x=u.formatMessage({id:"signInUserNotFound"}),C=u.formatMessage({id:"signInEnterEmailPlaceholder"}),B=u.formatMessage({id:"signInEnterPasswordPlaceholder"}),f=u.formatMessage({id:"signUpBtnSighIn"}),h=u.formatMessage({id:"errRequired"}),w=u.formatMessage({id:"errMinLength"});return(0,s.jsxs)("div",Object.assign({className:N.contentWrapper},{children:[(0,s.jsx)(v,Object.assign({type:"email",placeholder:C,onInput:r=>A(r.target.value)},e("email",{required:{value:!0,message:h}}),{error:null===(r=null==a?void 0:a.email)||void 0===r?void 0:r.message})),(0,s.jsx)(v,Object.assign({type:"text",placeholder:B,onInput:r=>c(r.target.value)},e("password",{required:{value:!0,message:h},minLength:{value:8,message:w}}),{error:null===(n=null==a?void 0:a.password)||void 0===n?void 0:n.message})),(0,s.jsx)(M.z,{clickHandler:t((()=>{(0,j.e5)(E.I,i,l).then((r=>{var n;n=r.user.email,m((0,z.WG)({userEmail:n})),o(),g("/GraphiQL")})).catch((r=>{"auth/wrong-password"===r.code?p(I):"auth/user-not-found"===r.code?p(x):console.log(r.message)}))})),text:f}),d&&(0,s.jsx)("p",Object.assign({className:N.errorMessage},{children:d}))]}))};var O=e(4771),P={};P.styleTagTransform=u(),P.setAttributes=d(),P.insert=l().bind(null,"head"),P.domAPI=i(),P.insertStyleElement=m(),t()(O.Z,P);const Q=O.Z&&O.Z.locals?O.Z.locals:void 0;var G=e(6551);function U(){const r=(0,W.TH)(),n=new URLSearchParams(r.search).get("auth");return(0,s.jsx)("div",Object.assign({className:Q.accountWrapper},{children:(0,s.jsxs)("div",Object.assign({className:Q.formWrapper},{children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("p",Object.assign({className:Q.subtitle},{children:"sign-in"===n?(0,G.Z)("accountPageSubtitleSignIn"):(0,G.Z)("accountPageSubtitleSignUp")})),(0,s.jsx)("p",Object.assign({className:Q.title},{children:"sign-in"===n?(0,G.Z)("accountPageTitleSignIn"):(0,G.Z)("accountPageTitleSignUp")}))]}),"sign-in"===n?(0,s.jsx)(L,{}):(0,s.jsx)(w,{})]}))}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,